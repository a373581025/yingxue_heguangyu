<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.baizhi.dao.VideoDao">
    <resultMap id="video" type="Video">
        <id column="video_id" property="videoId"></id>
        <result column="title" property="title"></result>
        <result column="brief" property="brief"></result>
        <result column="cover_path" property="coverPath"></result>
        <result column="video_path" property="videoPath"></result>
        <result column="create_date" property="createDate"></result>
        <association property="category" javaType="Category">
            <id column="categoryid" property="id"></id>
            <result column="cate_name" property="cateName"></result>
        </association>
        <association property="user" javaType="User">
            <id column="userid" property="userid"></id>
            <result column="username" property="username"></result>
        </association>
    </resultMap>

    <!--sql片段-->
    <sql id="select">
        select video_id,
               title,
               brief,
               cover_path,
               video_id,
               create_date,
               categoryid,
               userid,
               groupid
        from yx_video
    </sql>

    <!--List<cn.baizhi.entity.Video> selectByPage(@Param("start")int start, @Param("end")int end);-->
    <select id="selectByPage" resultMap="video">
        select video_id,
               title,
               video.brief,
               cover_path,
               video_path,
               create_date,
               categoryid,
               category.cate_name,
               video.userid,
               user.username,
               groupid
        from (
                 select video_id,
                        title,
                        brief,
                        cover_path,
                        video_path,
                        create_date,
                        categoryid,
                        userid,
                        groupid
                 from yx_video
                 limit #{start},#{end}) video
                 left join yx_category category on categoryid = id
                 left join yx_user user on video.userid = user.userid
    </select>

    <!--int selectCount();-->
    <select id="selectCount" resultType="int">
        select count(*)
        from yx_video

    </select>

    <!--T selectOneById(K k);-->
    <select id="selectOneById" parameterType="String" resultMap="video">
        select video_id,
               title,
               video.brief,
               cover_path,
               video_path,
               create_date,
               categoryid,
               category.cate_name,
               video.userid,
               user.username,
               groupid
        from (
                 select video_id,
                        title,
                        brief,
                        cover_path,
                        video_path,
                        create_date,
                        categoryid,
                        userid,
                        groupid
                 from yx_video
                 where video_id = #{videoId}) video
                 left join yx_category category on categoryid = id
                 left join yx_user user on video.userid = user.userid
    </select>

    <!--void save(Video video);-->
    <insert id="save" parameterType="Video">
        insert into yx_video(video_id, title, brief, cover_path, video_path, create_date, categoryid, userid, groupid)
        values (#{videoId}, #{title}, #{brief}, #{coverPath}, #{videoPath}, #{createDate}, #{category.id},
                #{user.userid}, #{groupId})
    </insert>

    <!--void delete(K k);-->
    <delete id="delete" parameterType="String">
        delete
        from yx_video
        where video_id = #{videoId}
    </delete>
</mapper>